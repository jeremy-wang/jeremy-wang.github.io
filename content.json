[{"title":"Mac下使用hexo建立自己的博客","date":"2017-03-24T15:55:48.000Z","path":"2017/03/24/Mac下使用hexo建立自己的博客/","text":"Mac下使用hexo构建自己的博客##关键词： oh my Zsh npm git Node.js homebrew ##关于hexo github上的一些介绍 因为是与GitHub 上的二级域名相关联的，所以要是用git做版本控制和管理，而Mac一般是默认安装了git的 为了美化终端： 安装oh my zsh 安装homebrew 使用brew search和brew install 来安装一些比如 Node.js, npm此类包控制工具 然后基本的配件完成后，我们就开始个人博客的建立了。 首先在当前用户的文件集中新建一个专门放自己博客的文件夹mkdir [folder_name],这个folder_name可以随便取 进入该文件夹 cd folder_name 使用命令 “sudo npm install -g hexo” 来进行基本的hexo安装 安装完毕之后你使用 “hexo init” 可以初始化这个模版博客的界面 之后是 “hexo generate” 来生成相应的静态页面 你可以使用”hexo server”来运行从而在自己的浏览器看看效果以便调试 ##关于修改 在最外层的_config.yml文件中，你可以个性化的修改相当多的东西，但这个时候我们真正的想把自己的网站发布出去呢，应该是想要通过的github关联的二级域名上去，因此我们要在这个yml文件的deploy代码段增加几行如下代码： 修改之后，你就可以试试你自己精心修改过的网站hexo deploy上到github上什么样子啦 ##关于个性化域名：GitHub的二级域名看上去不是那么具有吸引力啊，怎么把这个关联到自己的域名呢？ 在你采用的这个hexo主题，也就是themes文件下，cd到那个你的主题，选择新建一个CNAME文件，没有什么后缀名，只解释CNAME，这个文件只需要你的域名文本【*.**】,然后到你的域名解析处添加CNAME类型，将这个github的二级域名给关联过去，这样之后你的即使输入你的GitHub 二级域名，他也会不自觉的跳转到你的这个域名。就像C语言的指针一样，他只是一个真实的数字或者数据的指向、超连接，本身没有什么意义。","tags":[]},{"title":"发声","date":"2017-03-22T01:19:30.000Z","path":"2017/03/22/发声/","text":"向世界说声你好Hello,world 像是大多数程序员的第一次程序的尝试，在终端或者屏幕前成功输出一个“Hello，world”的字符串，现在我也算是有了处个人空间来写点东西，可以分享给更多的人看到。 为什么要写博客因为之前很喜欢记录，于是找了各种编辑、笔记软件，印象笔记、IA writer等等，但个人写下来都感觉自己总结的太片面，虽然本来也就是写给自己看的，但仅仅把自己的想法总结下来，作为自己的大脑的一个扩展坞，大部分的总结是不会再看，只是之后偶然翻到，会惊讶自己当年写了那样一些东西，却不会再有什么进步。 但是公开的写出来给大家分享就会更加三四而后行，会严谨的组织自己的语言，并且也能从各种看客那里得到反馈，知识的传播也正是如此，使用严谨的语言，防止知识在传播过程中发生偏差。 起源话说之前一直有建立一个个人网站的想法，但真正有时间和精力也是最近，之前想到搭建网站就是各种复杂的设置和dreamweaver的繁杂设计和各种逻辑功能结构的编写，就觉得自己不能坚持下去。 而现在偶然得知了hexo这样的一个架构于github服务器的个人博客框架，经过几次尝试之后，也算是小小的完成自己的blog的搭建，而且网站内容的更新方式和blog书写使用markdown都是很方便，还原了博客的最初目的：写作和分享，而不必去在布局和图片的复杂设置上煞费苦心的设计。 下一篇的内容预告既然得益于hexo的帮助，有了这样一个自己的小空间，那么下一篇就专门来写写我是怎么搭建起来这样一个自己的博客的，的确找到一个好的教程很重要，hexo的github的Readme写的都比较简洁，真实操作会遇到各种小问题，希望我的下一篇博文能给你带来一点帮助。","tags":[{"name":"First  Hello world","slug":"First-Hello-world","permalink":"http://jeremywang.cn/tags/First-Hello-world/"}]}]